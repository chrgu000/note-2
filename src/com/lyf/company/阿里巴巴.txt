1、请介绍一项你最热爱、最擅长的专业领域，并且介绍你在这个领域的学习经历和未来的学习规划。
我最热爱擅长的专业领域是javaweb开发，学习到新知识，写一些项目，马上运用到实践上。
     我的学习经历：刚开始的时候就是学习java语言，目标非常明确。经过一段时间的学习提高，逐渐发现自己可以使用SSH等三大框架写网站了，这个时候是最满足的时候。看着项目在自己的手中一点一点成型，
内心是很激动的，每一个项目都像是自己的孩子一样。
     职业规划：专注于技术，不断提升自己的能力，希望在三年内能够成为独立的后端开发师。
2、请介绍你参与的印象最深刻的一个项目，为什么？并且介绍你在项目中的角色和发挥的作用。
我印象最深刻的项目也是现在正在做着的一个项目。药店连锁管理系统。这也是我做的最大的一个项目，
有长江有限公司外包给我们做的项目，
我在项目中负责后台的设计与实现，从数据库到后台的开发，目前已开发出雏形。目前一共有42张表，采用SSM框架进行开发。
3、你最期望在阿里巴巴工作（或实习）的部门或项目是什么？请介绍下你对该部门的了解和希望加入的原因。
希望加入淘宝网开发部门。我个人喜欢电子商务的项目，在线商城的网站等等。
我喜欢阿里巴巴的企业文化，积极向上，人性化，永不放弃，每个人都有着奋发向上的阿里味。
在线测评题：
阿里巴巴的ODPS大数据处理平台可以启动一系列并发的作业，每个作业中存在一系列存在父子关系的任务。每个任务用一个三元组表示--
（任务id，父任务id，执行开销），其中任务id是一个正整数（>0）；父任务id为0表示根任务，每个作业存在一个唯一的根任务，并且，
所有的任务，如果其父任务id不为0，那么必然是一个已经存在的根任务id；执行开销是一个正整数（>0）。系统中至少存在一个作业。
举例如下：
(1, 0, 2) (2, 0, 3) (3, 1, 2) (4, 1, 3)
对应的任务关系是：
     1(2)          2(3)
      /   \
3(2)   4(3)
注：括号内的数字表示任务开销。
很容易看出来，这些任务树构成了一个森林。每颗任务树有若干个叶子节点，从根节点到叶子结点的路径上所有的执行开销，
称作叶子节点对应任务的总开销。例如上面一共有3个叶子节点任务，分别是任务3, 4和2，对应的总开销分别是4, 5和3。总
开销最大的叶子节点任务是4，对应的总开销是5。
现在需要编写程序，针对输入的任务数据，找到总开销最大的叶子节点任务对应的总开销，比如针对上面例子，输出5。
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        ArrayList<Integer> _ids = new ArrayList<Integer>();
        ArrayList<Integer> _parents = new ArrayList<Integer>();
        ArrayList<Integer> _costs = new ArrayList<Integer>();

        Scanner in = new Scanner(System.in);
        String line = in.nextLine();

        while(line != null && !line.isEmpty()) {
            if(line.trim().equals("0")) break;
            String []values = line.trim().split(" ");
            if(values.length != 3) {
                break;
            }
            _ids.add(Integer.parseInt(values[0]));
            _parents.add(Integer.parseInt(values[1]));
            _costs.add(Integer.parseInt(values[2]));
            line = in.nextLine();
        }
        int res = resolve(_ids, _parents, _costs);

        System.out.println(String.valueOf(res));
    }

         // write your code here
    public static int resolve(ArrayList<Integer> ids, ArrayList<Integer> parents, ArrayList<Integer> costs) {
        
        return 0;
    }
}